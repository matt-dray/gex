% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hexagon.R
\name{add_text}
\alias{add_text}
\title{Add Text to the Hexagon}
\usage{
add_text(
  string = "example",
  x = 0.5,
  y = 0.4,
  angle = 0,
  size = 20,
  col = "black",
  family = "sans",
  face = c("plain", "bold", "italic", "bold.italic")
)
}
\arguments{
\item{string}{Character. Text to display. \code{NULL} (or an empty string) if
you don't want to place text.}

\item{x}{Numeric. Text location on the hexagon's x-axis.}

\item{y}{Numeric. Text location on the hexagon's y-axis.}

\item{angle}{Numeric. Rotation of text string in degrees. Positive
values will rotate anticlockwise by the given angle.}

\item{size}{Numeric. Text point-size.}

\item{col}{Character. Text colour. A named R colour or hexadecimal code.}

\item{family}{Character. Name of a font family available on your system.}

\item{face}{Character. Font face for the text.}
}
\value{
\code{NULL}. Adds to an existing graphics device.
}
\description{
Overlay text on the hexagon. Call this function separately for each string
you want to add.
}
\details{
\subsection{Order}{

When building a hex, this function should be called after \link{open_device} and
\link{add_hex}. You can then use further calls to \link{add_text}, \link{add_image} and
\link{add_border} (if desired) and finally \link{close_device}.
}

\subsection{Coordinates}{

Coordinates should be provided within the x- and y-axis ranges, which are
both from 0 to 1, giving the centre as x = 0.5 and y = 0.5.
}

\subsection{Colours}{

Named colour values must be listed in \code{\link[grDevices:colors]{grDevices::colours()}}. Hexadecimal
colour values must be provided with length 6 or 8 and must begin with an
octothorpe (\verb{#}).
}
}
\examples{
temp_path <- tempfile(fileext = ".png")
open_device(temp_path)
add_hex()
img_path <- system.file("img", "Rlogo.png", package = "png")
img_png <- png::readPNG(img_path)
add_image(img_png)
add_text()
add_border()
close_device()
}
\seealso{
Other hex content adders: 
\code{\link{add_image}()}
}
\concept{hex content adders}
